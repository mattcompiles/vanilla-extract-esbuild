import type { FontFaceRule, CSSKeyframes, StyleRule, GlobalStyleRule } from './types';
export declare function style(rule: StyleRule, debugId?: string): string;
export declare function globalStyle(selector: string, rule: GlobalStyleRule): void;
export declare function fontFace(rule: FontFaceRule, debugId?: string): string;
export declare function globalFontFace(fontFamily: string, rule: FontFaceRule): void;
export declare function keyframes(rule: CSSKeyframes, debugId?: string): string;
export declare function globalKeyframes(name: string, rule: CSSKeyframes): void;
export declare function styleVariants<StyleMap extends Record<string | number, StyleRule>>(styleMap: StyleMap, debugId?: string): Record<keyof StyleMap, string>;
export declare function styleVariants<Data extends Record<string | number, unknown>>(data: Data, mapData: <Key extends keyof Data>(value: Data[Key], key: Key) => StyleRule, debugId?: string): Record<keyof Data, string>;
